extern "C" {
    fn printFloat(f32) -> ();
    fn printDouble(f64) -> ();
    fn printInteger(i32) -> ();
}

fn f(x: &[f64], y : f64) -> f64 {
    x(1) - y
}

fn main() -> i32 {
    let x : &mut[f64] = ~[2:f64];
    x(1) = 1.2;
    let y = 2.0;

    let diff = rev_diff(f);

    let (fx, gradient) = diff((2 as u64, x), y);
    let tangents  = gradient(1.0);
    let (size, xd)  = tangents(0);
    let yd  = tangents(1);

    printDouble(fx);
    printDouble(xd(1));  // outputs 2.3 schould be 2.3
    printDouble(yd); // outputs 1.2 which is correct
    0
}
