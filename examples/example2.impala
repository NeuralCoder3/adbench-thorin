extern "C" {
    fn printFloat(f32) -> ();
    fn printDouble(f64) -> ();
    fn printInteger(i32) -> ();
    fn log(f64) -> (f64);
    fn exp(f64) -> (f64);
    fn sin(f64) -> (f64);
    fn cos(f64) -> (f64);
    fn logf(f32) -> (f32);
    fn lgamma(f64) -> (f64);
}

extern fn f(x: &[f64]) -> f64 {
    let x1 = x(0);
    let x2 = x(1);
    let x3 = x(2);
    let z1 = x1 + 2.0 * x3;
    z1*z1
}

fn main() -> i32 {

    let x : &mut[f64] = ~[3:f64];
    x(0) = 1.0;
    x(2) = 2.0;
    x(3) = 3.0;
    let a = f(x);

    let Df = rev_diff(f);

    printDouble(a);

    // diff fails
    //let Df = rev_diff(f);
    // let x = [3f,2f,4f];
    // let yp = Df(x);
    // let y  = yp(0);
    // let yP = yp(1)(1f);
    // //42
    // let r = y as i32;
    // let q0 = yP(0) as i32;
    // let q1 = yP(1) as i32;
    // let q2 = yP(2) as i32;
    // 10000 * q0 + 100*q1 + q2
    // // 2(x+2z), 0, 2(x+2z)*2
    // // 220044

    42
}
