; ModuleID = 'enzyme//enzyme.cpp'
source_filename = "enzyme//enzyme.cpp"
target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128"
target triple = "arm64-apple-macosx13.0.0"

%"class.std::__1::basic_ostream" = type { ptr, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", ptr, i32 }>
%"class.std::__1::ios_base" = type { ptr, i32, i64, i64, i32, i32, ptr, ptr, ptr, ptr, i64, i64, ptr, i64, i64, ptr, i64, i64 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.std::__1::locale" = type { ptr }
%"class.std::__1::basic_ostream<char>::sentry" = type { i8, ptr }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", ptr, i32, [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char>::__rep" }
%"struct.std::__1::basic_string<char>::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char>::__long" }
%"struct.std::__1::basic_string<char>::__long" = type { ptr, i64, i64 }
%"struct.std::__1::basic_string<char>::__short" = type { [23 x i8], [0 x i8], i8 }

@enzyme_dup = local_unnamed_addr global i32 0, align 4
@enzyme_dupnoneed = local_unnamed_addr global i32 0, align 4
@enzyme_out = local_unnamed_addr global i32 0, align 4
@enzyme_const = local_unnamed_addr global i32 0, align 4
@_ZNSt3__14coutE = external global %"class.std::__1::basic_ostream", align 8
@.str = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"No file specified!\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"basic_string\00", align 1
@_ZTISt12length_error = external constant ptr
@_ZTVSt12length_error = external unnamed_addr constant { [5 x ptr] }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

; Function Attrs: argmemonly mustprogress nofree nosync nounwind ssp uwtable
define void @_Z7softmaxiPKdPd(i32 noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef %2) local_unnamed_addr #0 {
  %4 = icmp sgt i32 %0, 0
  br i1 %4, label %5, label %20

5:                                                ; preds = %3
  %6 = zext i32 %0 to i64
  br label %10

7:                                                ; preds = %10
  br i1 %4, label %8, label %20

8:                                                ; preds = %7
  %9 = zext i32 %0 to i64
  br label %21

10:                                               ; preds = %5, %10
  %11 = phi i64 [ 0, %5 ], [ %18, %10 ]
  %12 = phi double [ 0.000000e+00, %5 ], [ %16, %10 ]
  %13 = getelementptr inbounds double, ptr %1, i64 %11
  %14 = load double, ptr %13, align 8, !tbaa !5
  %15 = tail call double @llvm.exp.f64(double %14)
  %16 = fadd double %12, %15
  %17 = getelementptr inbounds double, ptr %2, i64 %11
  store double %15, ptr %17, align 8, !tbaa !5
  %18 = add nuw nsw i64 %11, 1
  %19 = icmp eq i64 %18, %6
  br i1 %19, label %7, label %10, !llvm.loop !9

20:                                               ; preds = %21, %3, %7
  ret void

21:                                               ; preds = %8, %21
  %22 = phi i64 [ 0, %8 ], [ %26, %21 ]
  %23 = getelementptr inbounds double, ptr %2, i64 %22
  %24 = load double, ptr %23, align 8, !tbaa !5
  %25 = fdiv double %24, %16
  store double %25, ptr %23, align 8, !tbaa !5
  %26 = add nuw nsw i64 %22, 1
  %27 = icmp eq i64 %26, %9
  br i1 %27, label %20, label %21, !llvm.loop !12
}

; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.exp.f64(double) #2

; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone ssp willreturn uwtable
define noundef double @_Z4relud(double noundef %0) local_unnamed_addr #3 {
  %2 = fcmp ogt double %0, 0.000000e+00
  %3 = fmul double %0, 1.000000e-01
  %4 = select i1 %2, double %0, double %3
  ret double %4
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind ssp uwtable
define void @_Z21fully_connected_layeriiPKdS0_Pd(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr nocapture noundef %4) local_unnamed_addr #4 {
  %6 = icmp sgt i32 %0, 0
  br i1 %6, label %7, label %12

7:                                                ; preds = %5
  %8 = icmp sgt i32 %1, 0
  %9 = sext i32 %1 to i64
  %10 = zext i32 %0 to i64
  %11 = zext i32 %1 to i64
  br label %13

12:                                               ; preds = %19, %5
  ret void

13:                                               ; preds = %7, %19
  %14 = phi i64 [ 0, %7 ], [ %20, %19 ]
  %15 = getelementptr inbounds double, ptr %2, i64 %14
  %16 = load double, ptr %15, align 8, !tbaa !5
  br i1 %8, label %17, label %19

17:                                               ; preds = %13
  %18 = mul nsw i64 %14, %9
  br label %22

19:                                               ; preds = %22, %13
  %20 = add nuw nsw i64 %14, 1
  %21 = icmp eq i64 %20, %10
  br i1 %21, label %12, label %13, !llvm.loop !13

22:                                               ; preds = %17, %22
  %23 = phi i64 [ 0, %17 ], [ %34, %22 ]
  %24 = add nsw i64 %23, %18
  %25 = getelementptr inbounds double, ptr %3, i64 %24
  %26 = load double, ptr %25, align 8, !tbaa !5
  %27 = fmul double %16, %26
  %28 = fcmp ogt double %27, 0.000000e+00
  %29 = fmul double %27, 1.000000e-01
  %30 = select i1 %28, double %27, double %29
  %31 = getelementptr inbounds double, ptr %4, i64 %23
  %32 = load double, ptr %31, align 8, !tbaa !5
  %33 = fadd double %32, %30
  store double %33, ptr %31, align 8, !tbaa !5
  %34 = add nuw nsw i64 %23, 1
  %35 = icmp eq i64 %34, %11
  br i1 %35, label %19, label %22, !llvm.loop !14
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind ssp uwtable
define void @_Z3muliiiPKdS0_PdS0_S1_(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr nocapture noundef readonly %3, ptr nocapture noundef readonly %4, ptr nocapture noundef %5, ptr nocapture noundef readonly %6, ptr nocapture noundef %7) #0 {
  %9 = icmp sgt i32 %0, 0
  br i1 %9, label %10, label %38

10:                                               ; preds = %8
  %11 = icmp sgt i32 %1, 0
  %12 = sext i32 %1 to i64
  %13 = zext i32 %0 to i64
  %14 = zext i32 %1 to i64
  br label %15

15:                                               ; preds = %21, %10
  %16 = phi i64 [ 0, %10 ], [ %22, %21 ]
  %17 = getelementptr inbounds double, ptr %3, i64 %16
  %18 = load double, ptr %17, align 8, !tbaa !5
  br i1 %11, label %19, label %21

19:                                               ; preds = %15
  %20 = mul nsw i64 %16, %12
  br label %24

21:                                               ; preds = %24, %15
  %22 = add nuw nsw i64 %16, 1
  %23 = icmp eq i64 %22, %13
  br i1 %23, label %38, label %15, !llvm.loop !13

24:                                               ; preds = %24, %19
  %25 = phi i64 [ 0, %19 ], [ %36, %24 ]
  %26 = add nsw i64 %25, %20
  %27 = getelementptr inbounds double, ptr %4, i64 %26
  %28 = load double, ptr %27, align 8, !tbaa !5
  %29 = fmul double %18, %28
  %30 = fcmp ogt double %29, 0.000000e+00
  %31 = fmul double %29, 1.000000e-01
  %32 = select i1 %30, double %29, double %31
  %33 = getelementptr inbounds double, ptr %5, i64 %25
  %34 = load double, ptr %33, align 8, !tbaa !5
  %35 = fadd double %34, %32
  store double %35, ptr %33, align 8, !tbaa !5
  %36 = add nuw nsw i64 %25, 1
  %37 = icmp eq i64 %36, %14
  br i1 %37, label %21, label %24, !llvm.loop !14

38:                                               ; preds = %21, %8
  %39 = icmp sgt i32 %1, 0
  br i1 %39, label %40, label %68

40:                                               ; preds = %38
  %41 = icmp sgt i32 %2, 0
  %42 = sext i32 %2 to i64
  %43 = zext i32 %1 to i64
  %44 = zext i32 %2 to i64
  br label %45

45:                                               ; preds = %51, %40
  %46 = phi i64 [ 0, %40 ], [ %52, %51 ]
  %47 = getelementptr inbounds double, ptr %5, i64 %46
  %48 = load double, ptr %47, align 8, !tbaa !5
  br i1 %41, label %49, label %51

49:                                               ; preds = %45
  %50 = mul nsw i64 %46, %42
  br label %54

51:                                               ; preds = %54, %45
  %52 = add nuw nsw i64 %46, 1
  %53 = icmp eq i64 %52, %43
  br i1 %53, label %68, label %45, !llvm.loop !13

54:                                               ; preds = %54, %49
  %55 = phi i64 [ 0, %49 ], [ %66, %54 ]
  %56 = add nsw i64 %55, %50
  %57 = getelementptr inbounds double, ptr %6, i64 %56
  %58 = load double, ptr %57, align 8, !tbaa !5
  %59 = fmul double %48, %58
  %60 = fcmp ogt double %59, 0.000000e+00
  %61 = fmul double %59, 1.000000e-01
  %62 = select i1 %60, double %59, double %61
  %63 = getelementptr inbounds double, ptr %7, i64 %55
  %64 = load double, ptr %63, align 8, !tbaa !5
  %65 = fadd double %64, %62
  store double %65, ptr %63, align 8, !tbaa !5
  %66 = add nuw nsw i64 %55, 1
  %67 = icmp eq i64 %66, %44
  br i1 %67, label %51, label %54, !llvm.loop !14

68:                                               ; preds = %51, %38
  %69 = icmp sgt i32 %2, 0
  br i1 %69, label %70, label %88

70:                                               ; preds = %68
  %71 = zext i32 %2 to i64
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %79, %72 ]
  %74 = phi double [ 0.000000e+00, %70 ], [ %78, %72 ]
  %75 = getelementptr inbounds double, ptr %7, i64 %73
  %76 = load double, ptr %75, align 8, !tbaa !5
  %77 = tail call double @llvm.exp.f64(double %76)
  %78 = fadd double %74, %77
  store double %77, ptr %75, align 8, !tbaa !5
  %79 = add nuw nsw i64 %73, 1
  %80 = icmp eq i64 %79, %71
  br i1 %80, label %81, label %72, !llvm.loop !9

81:                                               ; preds = %72, %81
  %82 = phi i64 [ %86, %81 ], [ 0, %72 ]
  %83 = getelementptr inbounds double, ptr %7, i64 %82
  %84 = load double, ptr %83, align 8, !tbaa !5
  %85 = fdiv double %84, %78
  store double %85, ptr %83, align 8, !tbaa !5
  %86 = add nuw nsw i64 %82, 1
  %87 = icmp eq i64 %86, %71
  br i1 %87, label %88, label %81, !llvm.loop !12

88:                                               ; preds = %81, %68
  ret void
}

; Function Attrs: mustprogress ssp uwtable
define void @_Z5mul_diiiPKdS0_S0_S0_PdS1_S0_S0_S0_S1_(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef %3, ptr noundef %4, ptr noundef %5, ptr noundef %6, ptr noundef %7, ptr noundef %8, ptr noundef %9, ptr noundef %10, ptr noundef %11, ptr noundef %12) local_unnamed_addr #5 {
  %14 = load i32, ptr @enzyme_const, align 4, !tbaa !15
  %15 = load i32, ptr @enzyme_dup, align 4, !tbaa !15
  %16 = tail call noundef double (ptr, ...) @_Z17__enzyme_autodiffPvz(ptr noundef nonnull @_Z3muliiiPKdS0_PdS0_S1_, i32 noundef %14, i32 noundef %0, i32 noundef %14, i32 noundef %1, i32 noundef %14, i32 noundef %2, i32 noundef %15, ptr noundef %3, ptr noundef %8, i32 noundef %15, ptr noundef %4, ptr noundef %9, i32 noundef %15, ptr noundef %5, ptr noundef %10, i32 noundef %15, ptr noundef %6, ptr noundef %11, i32 noundef %15, ptr noundef %7, ptr noundef %12)
  ret void
}

declare noundef double @_Z17__enzyme_autodiffPvz(ptr noundef, ...) local_unnamed_addr #6

; Function Attrs: mustprogress ssp uwtable
define void @_Z5printiPKd(i32 noundef %0, ptr nocapture noundef readonly %1) local_unnamed_addr #5 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.std::__1::locale", align 8
  %4 = icmp sgt i32 %0, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = zext i32 %0 to i64
  br label %25

7:                                                ; preds = %25, %2
  %8 = load ptr, ptr @_ZNSt3__14coutE, align 8, !tbaa !17
  %9 = getelementptr i8, ptr %8, i64 -24
  %10 = load i64, ptr %9, align 8
  %11 = getelementptr inbounds i8, ptr @_ZNSt3__14coutE, i64 %10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #18
  call void @_ZNKSt3__18ios_base6getlocEv(ptr nonnull sret(%"class.std::__1::locale") align 8 %3, ptr noundef nonnull align 8 dereferenceable(136) %11)
  %12 = invoke noundef ptr @_ZNKSt3__16locale9use_facetERNS0_2idE(ptr noundef nonnull align 8 dereferenceable(8) %3, ptr noundef nonnull align 8 dereferenceable(12) @_ZNSt3__15ctypeIcE2idE)
          to label %13 unwind label %18

13:                                               ; preds = %7
  %14 = load ptr, ptr %12, align 8, !tbaa !17
  %15 = getelementptr inbounds ptr, ptr %14, i64 7
  %16 = load ptr, ptr %15, align 8
  %17 = invoke noundef signext i8 %16(ptr noundef nonnull align 8 dereferenceable(25) %12, i8 noundef signext 10)
          to label %21 unwind label %18

18:                                               ; preds = %13, %7
  %19 = landingpad { ptr, i32 }
          cleanup
  %20 = call noundef ptr @_ZNSt3__16localeD1Ev(ptr noundef nonnull align 8 dereferenceable(8) %3) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #18
  resume { ptr, i32 } %19

21:                                               ; preds = %13
  %22 = call noundef ptr @_ZNSt3__16localeD1Ev(ptr noundef nonnull align 8 dereferenceable(8) %3) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #18
  %23 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(ptr noundef nonnull align 8 dereferenceable(8) @_ZNSt3__14coutE, i8 noundef signext %17)
  %24 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(ptr noundef nonnull align 8 dereferenceable(8) @_ZNSt3__14coutE)
  ret void

25:                                               ; preds = %5, %25
  %26 = phi i64 [ 0, %5 ], [ %31, %25 ]
  %27 = getelementptr inbounds double, ptr %1, i64 %26
  %28 = load double, ptr %27, align 8, !tbaa !5
  %29 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(ptr noundef nonnull align 8 dereferenceable(8) @_ZNSt3__14coutE, double noundef %28)
  %30 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(ptr noundef nonnull align 8 dereferenceable(8) %29, ptr noundef nonnull @.str, i64 noundef 1)
  %31 = add nuw nsw i64 %26, 1
  %32 = icmp eq i64 %31, %6
  br i1 %32, label %7, label %25, !llvm.loop !19
}

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(ptr noundef nonnull align 8 dereferenceable(8), double noundef) local_unnamed_addr #6

; Function Attrs: mustprogress norecurse ssp uwtable
define noundef i32 @main(i32 noundef %0, ptr nocapture noundef readonly %1) local_unnamed_addr #7 {
  %3 = icmp slt i32 %0, 2
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull @.str.1)
  br label %123

6:                                                ; preds = %2
  %7 = getelementptr inbounds ptr, ptr %1, i64 1
  %8 = load ptr, ptr %7, align 8, !tbaa !20
  %9 = tail call i32 @atoi(ptr nocapture noundef %8)
  %10 = getelementptr inbounds ptr, ptr %1, i64 2
  %11 = load ptr, ptr %10, align 8, !tbaa !20
  %12 = tail call i32 @atoi(ptr nocapture noundef %11)
  %13 = getelementptr inbounds ptr, ptr %1, i64 3
  %14 = load ptr, ptr %13, align 8, !tbaa !20
  %15 = tail call i32 @atoi(ptr nocapture noundef %14)
  %16 = mul i32 %12, %9
  %17 = mul i32 %15, %12
  %18 = sext i32 %9 to i64
  %19 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %18, i64 8)
  %20 = extractvalue { i64, i1 } %19, 1
  %21 = extractvalue { i64, i1 } %19, 0
  %22 = select i1 %20, i64 -1, i64 %21
  %23 = tail call noalias noundef nonnull ptr @_Znam(i64 noundef %22) #19
  %24 = sext i32 %16 to i64
  %25 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %24, i64 8)
  %26 = extractvalue { i64, i1 } %25, 1
  %27 = extractvalue { i64, i1 } %25, 0
  %28 = select i1 %26, i64 -1, i64 %27
  %29 = tail call noalias noundef nonnull ptr @_Znam(i64 noundef %28) #19
  %30 = sext i32 %12 to i64
  %31 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %30, i64 8)
  %32 = extractvalue { i64, i1 } %31, 1
  %33 = extractvalue { i64, i1 } %31, 0
  %34 = select i1 %32, i64 -1, i64 %33
  %35 = tail call noalias noundef nonnull ptr @_Znam(i64 noundef %34) #19
  %36 = sext i32 %17 to i64
  %37 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %36, i64 8)
  %38 = extractvalue { i64, i1 } %37, 1
  %39 = extractvalue { i64, i1 } %37, 0
  %40 = select i1 %38, i64 -1, i64 %39
  %41 = tail call noalias noundef nonnull ptr @_Znam(i64 noundef %40) #19
  %42 = sext i32 %15 to i64
  %43 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %42, i64 8)
  %44 = extractvalue { i64, i1 } %43, 1
  %45 = extractvalue { i64, i1 } %43, 0
  %46 = select i1 %44, i64 -1, i64 %45
  %47 = tail call noalias noundef nonnull ptr @_Znam(i64 noundef %46) #19
  %48 = tail call noalias noundef nonnull ptr @_Znam(i64 noundef %22) #19
  %49 = tail call noalias noundef nonnull ptr @_Znam(i64 noundef %28) #19
  %50 = tail call noalias noundef nonnull ptr @_Znam(i64 noundef %34) #19
  %51 = tail call noalias noundef nonnull ptr @_Znam(i64 noundef %40) #19
  %52 = tail call noalias noundef nonnull ptr @_Znam(i64 noundef %46) #19
  %53 = icmp sgt i32 %9, 0
  %54 = icmp sgt i32 %16, 0
  %55 = icmp sgt i32 %12, 0
  %56 = icmp sgt i32 %17, 0
  %57 = icmp sgt i32 %15, 0
  %58 = zext i32 %9 to i64
  %59 = shl nuw nsw i64 %58, 3
  %60 = zext i32 %16 to i64
  %61 = shl nuw nsw i64 %60, 3
  %62 = zext i32 %12 to i64
  %63 = shl nuw nsw i64 %62, 3
  %64 = zext i32 %17 to i64
  %65 = shl nuw nsw i64 %64, 3
  %66 = zext i32 %15 to i64
  %67 = shl nuw nsw i64 %66, 3
  br label %68

68:                                               ; preds = %6, %109
  %69 = phi i64 [ 0, %6 ], [ %118, %109 ]
  %70 = phi i64 [ -1, %6 ], [ %117, %109 ]
  %71 = phi i32 [ 0, %6 ], [ %119, %109 ]
  %72 = icmp ult i32 %71, 10
  %73 = icmp slt i64 %69, 500
  %74 = select i1 %72, i1 true, i1 %73
  br i1 %74, label %75, label %121

75:                                               ; preds = %68
  br i1 %53, label %76, label %77

76:                                               ; preds = %75
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %48, i8 0, i64 %59, i1 false), !tbaa !5
  br label %79

77:                                               ; preds = %79, %75
  br i1 %54, label %78, label %87

78:                                               ; preds = %77
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %49, i8 0, i64 %61, i1 false), !tbaa !5
  br label %89

79:                                               ; preds = %76, %79
  %80 = phi i64 [ 0, %76 ], [ %85, %79 ]
  %81 = trunc i64 %80 to i32
  %82 = sitofp i32 %81 to double
  %83 = tail call double @llvm.fmuladd.f64(double %82, double 1.000000e-01, double -2.000000e-01)
  %84 = getelementptr inbounds double, ptr %23, i64 %80
  store double %83, ptr %84, align 8, !tbaa !5
  %85 = add nuw nsw i64 %80, 1
  %86 = icmp eq i64 %85, %58
  br i1 %86, label %77, label %79, !llvm.loop !22

87:                                               ; preds = %89, %77
  br i1 %55, label %88, label %97

88:                                               ; preds = %87
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %35, i8 0, i64 %63, i1 false), !tbaa !5
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %50, i8 0, i64 %63, i1 false), !tbaa !5
  br label %97

89:                                               ; preds = %78, %89
  %90 = phi i64 [ 0, %78 ], [ %95, %89 ]
  %91 = trunc i64 %90 to i32
  %92 = sitofp i32 %91 to double
  %93 = fmul double %92, 1.000000e-01
  %94 = getelementptr inbounds double, ptr %29, i64 %90
  store double %93, ptr %94, align 8, !tbaa !5
  %95 = add nuw nsw i64 %90, 1
  %96 = icmp eq i64 %95, %60
  br i1 %96, label %87, label %89, !llvm.loop !23

97:                                               ; preds = %88, %87
  br i1 %56, label %98, label %99

98:                                               ; preds = %97
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %51, i8 0, i64 %65, i1 false), !tbaa !5
  br label %101

99:                                               ; preds = %101, %97
  br i1 %57, label %100, label %109

100:                                              ; preds = %99
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %47, i8 0, i64 %67, i1 false), !tbaa !5
  br label %109

101:                                              ; preds = %98, %101
  %102 = phi i64 [ 0, %98 ], [ %107, %101 ]
  %103 = trunc i64 %102 to i32
  %104 = sitofp i32 %103 to double
  %105 = fmul double %104, 1.000000e-01
  %106 = getelementptr inbounds double, ptr %41, i64 %102
  store double %105, ptr %106, align 8, !tbaa !5
  %107 = add nuw nsw i64 %102, 1
  %108 = icmp eq i64 %107, %64
  br i1 %108, label %99, label %101, !llvm.loop !24

109:                                              ; preds = %100, %99
  store double 1.000000e+00, ptr %52, align 8, !tbaa !5
  tail call void @begin()
  %110 = load i32, ptr @enzyme_const, align 4, !tbaa !15
  %111 = load i32, ptr @enzyme_dup, align 4, !tbaa !15
  %112 = tail call noundef double (ptr, ...) @_Z17__enzyme_autodiffPvz(ptr noundef nonnull @_Z3muliiiPKdS0_PdS0_S1_, i32 noundef %110, i32 noundef %9, i32 noundef %110, i32 noundef %12, i32 noundef %110, i32 noundef %15, i32 noundef %111, ptr noundef nonnull %23, ptr noundef nonnull %48, i32 noundef %111, ptr noundef nonnull %29, ptr noundef nonnull %49, i32 noundef %111, ptr noundef nonnull %35, ptr noundef nonnull %50, i32 noundef %111, ptr noundef nonnull %41, ptr noundef nonnull %51, i32 noundef %111, ptr noundef nonnull %47, ptr noundef nonnull %52)
  %113 = tail call i64 @eval()
  %114 = icmp eq i64 %70, -1
  %115 = icmp slt i64 %113, %70
  %116 = select i1 %114, i1 true, i1 %115
  %117 = select i1 %116, i64 %113, i64 %70
  %118 = add nsw i64 %113, %69
  %119 = add nuw nsw i32 %71, 1
  %120 = icmp slt i64 %118, 10000
  br i1 %120, label %68, label %121, !llvm.loop !25

121:                                              ; preds = %109, %68
  %122 = phi i64 [ %117, %109 ], [ %70, %68 ]
  tail call void @printLong(i64 noundef %122)
  br label %123

123:                                              ; preds = %121, %4
  %124 = phi i32 [ -1, %4 ], [ 0, %121 ]
  ret i32 %124
}

; Function Attrs: nofree nounwind
declare noundef i32 @printf(ptr nocapture noundef readonly, ...) local_unnamed_addr #8

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare i32 @atoi(ptr nocapture noundef) local_unnamed_addr #9

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #2

; Function Attrs: nobuiltin allocsize(0)
declare noundef nonnull ptr @_Znam(i64 noundef) local_unnamed_addr #10

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.fmuladd.f64(double, double, double) #2

declare void @begin() local_unnamed_addr #6

declare i64 @eval() local_unnamed_addr #6

declare void @printLong(i64 noundef) local_unnamed_addr #6

; Function Attrs: ssp uwtable
define linkonce_odr noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(ptr noundef nonnull align 8 dereferenceable(8) %0, ptr noundef %1, i64 noundef %2) local_unnamed_addr #11 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char>::sentry", align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5) #18
  %6 = invoke noundef ptr @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(ptr noundef nonnull align 8 dereferenceable(16) %5, ptr noundef nonnull align 8 dereferenceable(8) %0)
          to label %7 unwind label %55

7:                                                ; preds = %3
  %8 = load i8, ptr %5, align 8, !tbaa !26, !range !29
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %61, label %10

10:                                               ; preds = %7
  %11 = load ptr, ptr %0, align 8, !tbaa !17
  %12 = getelementptr i8, ptr %11, i64 -24
  %13 = load i64, ptr %12, align 8
  %14 = getelementptr inbounds i8, ptr %0, i64 %13
  %15 = getelementptr inbounds %"class.std::__1::ios_base", ptr %14, i64 0, i32 6
  %16 = load ptr, ptr %15, align 8, !tbaa !30
  %17 = getelementptr inbounds %"class.std::__1::ios_base", ptr %14, i64 0, i32 1
  %18 = load i32, ptr %17, align 8, !tbaa !33
  %19 = getelementptr inbounds %"class.std::__1::basic_ios", ptr %14, i64 0, i32 2
  %20 = load i32, ptr %19, align 8, !tbaa !34
  %21 = icmp eq i32 %20, -1
  br i1 %21, label %22, label %36

22:                                               ; preds = %10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #18
  invoke void @_ZNKSt3__18ios_base6getlocEv(ptr nonnull sret(%"class.std::__1::locale") align 8 %4, ptr noundef nonnull align 8 dereferenceable(136) %14)
          to label %23 unwind label %59

23:                                               ; preds = %22
  %24 = invoke noundef ptr @_ZNKSt3__16locale9use_facetERNS0_2idE(ptr noundef nonnull align 8 dereferenceable(8) %4, ptr noundef nonnull align 8 dereferenceable(12) @_ZNSt3__15ctypeIcE2idE)
          to label %25 unwind label %30

25:                                               ; preds = %23
  %26 = load ptr, ptr %24, align 8, !tbaa !17
  %27 = getelementptr inbounds ptr, ptr %26, i64 7
  %28 = load ptr, ptr %27, align 8
  %29 = invoke noundef signext i8 %28(ptr noundef nonnull align 8 dereferenceable(25) %24, i8 noundef signext 32)
          to label %33 unwind label %30

30:                                               ; preds = %25, %23
  %31 = landingpad { ptr, i32 }
          catch ptr null
  %32 = call noundef ptr @_ZNSt3__16localeD1Ev(ptr noundef nonnull align 8 dereferenceable(8) %4) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #18
  br label %63

33:                                               ; preds = %25
  %34 = call noundef ptr @_ZNSt3__16localeD1Ev(ptr noundef nonnull align 8 dereferenceable(8) %4) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #18
  %35 = sext i8 %29 to i32
  store i32 %35, ptr %19, align 8, !tbaa !34
  br label %36

36:                                               ; preds = %33, %10
  %37 = phi i32 [ %35, %33 ], [ %20, %10 ]
  %38 = trunc i32 %37 to i8
  %39 = and i32 %18, 176
  %40 = icmp eq i32 %39, 32
  %41 = getelementptr inbounds i8, ptr %1, i64 %2
  %42 = select i1 %40, ptr %41, ptr %1
  %43 = ptrtoint ptr %16 to i64
  %44 = invoke i64 @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i64 %43, ptr noundef %1, ptr noundef %42, ptr noundef %41, ptr noundef nonnull align 8 dereferenceable(136) %14, i8 noundef signext %38)
          to label %45 unwind label %59

45:                                               ; preds = %36
  %46 = icmp eq i64 %44, 0
  br i1 %46, label %47, label %61

47:                                               ; preds = %45
  %48 = load ptr, ptr %0, align 8, !tbaa !17
  %49 = getelementptr i8, ptr %48, i64 -24
  %50 = load i64, ptr %49, align 8
  %51 = getelementptr inbounds i8, ptr %0, i64 %50
  %52 = getelementptr inbounds %"class.std::__1::ios_base", ptr %51, i64 0, i32 4
  %53 = load i32, ptr %52, align 8, !tbaa !36
  %54 = or i32 %53, 5
  invoke void @_ZNSt3__18ios_base5clearEj(ptr noundef nonnull align 8 dereferenceable(136) %51, i32 noundef %54)
          to label %61 unwind label %57

55:                                               ; preds = %3
  %56 = landingpad { ptr, i32 }
          catch ptr null
  br label %66

57:                                               ; preds = %47
  %58 = landingpad { ptr, i32 }
          catch ptr null
  br label %63

59:                                               ; preds = %22, %36
  %60 = landingpad { ptr, i32 }
          catch ptr null
  br label %63

61:                                               ; preds = %47, %45, %7
  %62 = call noundef ptr @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(ptr noundef nonnull align 8 dereferenceable(16) %5) #18
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #18
  br label %75

63:                                               ; preds = %59, %30, %57
  %64 = phi { ptr, i32 } [ %58, %57 ], [ %60, %59 ], [ %31, %30 ]
  %65 = call noundef ptr @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(ptr noundef nonnull align 8 dereferenceable(16) %5) #18
  br label %66

66:                                               ; preds = %63, %55
  %67 = phi { ptr, i32 } [ %64, %63 ], [ %56, %55 ]
  %68 = extractvalue { ptr, i32 } %67, 0
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #18
  %69 = call ptr @__cxa_begin_catch(ptr %68) #18
  %70 = load ptr, ptr %0, align 8, !tbaa !17
  %71 = getelementptr i8, ptr %70, i64 -24
  %72 = load i64, ptr %71, align 8
  %73 = getelementptr inbounds i8, ptr %0, i64 %72
  invoke void @_ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv(ptr noundef nonnull align 8 dereferenceable(136) %73)
          to label %74 unwind label %76

74:                                               ; preds = %66
  call void @__cxa_end_catch()
  br label %75

75:                                               ; preds = %74, %61
  ret ptr %0

76:                                               ; preds = %66
  %77 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %78 unwind label %79

78:                                               ; preds = %76
  resume { ptr, i32 } %77

79:                                               ; preds = %76
  %80 = landingpad { ptr, i32 }
          catch ptr null
  %81 = extractvalue { ptr, i32 } %80, 0
  call void @__clang_call_terminate(ptr %81) #20
  unreachable
}

declare noundef ptr @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(ptr noundef nonnull returned align 8 dereferenceable(16), ptr noundef nonnull align 8 dereferenceable(8)) unnamed_addr #6

declare i32 @__gxx_personality_v0(...)

; Function Attrs: ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i64 %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef nonnull align 8 dereferenceable(136) %4, i8 noundef signext %5) local_unnamed_addr #11 personality ptr @__gxx_personality_v0 {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = inttoptr i64 %0 to ptr
  %9 = icmp eq i64 %0, 0
  br i1 %9, label %81, label %10

10:                                               ; preds = %6
  %11 = ptrtoint ptr %3 to i64
  %12 = ptrtoint ptr %1 to i64
  %13 = sub i64 %11, %12
  %14 = getelementptr inbounds %"class.std::__1::ios_base", ptr %4, i64 0, i32 3
  %15 = load i64, ptr %14, align 8, !tbaa !37
  %16 = icmp sgt i64 %15, %13
  %17 = sub nsw i64 %15, %13
  %18 = select i1 %16, i64 %17, i64 0
  %19 = ptrtoint ptr %2 to i64
  %20 = sub i64 %19, %12
  %21 = icmp sgt i64 %20, 0
  br i1 %21, label %22, label %28

22:                                               ; preds = %10
  %23 = load ptr, ptr %8, align 8, !tbaa !17
  %24 = getelementptr inbounds ptr, ptr %23, i64 12
  %25 = load ptr, ptr %24, align 8
  %26 = tail call noundef i64 %25(ptr noundef nonnull align 8 dereferenceable(64) %8, ptr noundef %1, i64 noundef %20)
  %27 = icmp eq i64 %26, %20
  br i1 %27, label %28, label %81

28:                                               ; preds = %22, %10
  %29 = icmp sgt i64 %18, 0
  br i1 %29, label %30, label %71

30:                                               ; preds = %28
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #18
  %31 = icmp ugt i64 %18, 9223372036854775791
  br i1 %31, label %32, label %33

32:                                               ; preds = %30
  call void @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE20__throw_length_errorB6v15003Ev(ptr noundef nonnull align 8 dereferenceable(24) %7) #21
  unreachable

33:                                               ; preds = %30
  %34 = icmp ult i64 %18, 23
  br i1 %34, label %42, label %35

35:                                               ; preds = %33
  %36 = add nuw nsw i64 %18, 16
  %37 = and i64 %36, -16
  %38 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %37) #19
  store ptr %38, ptr %7, align 8, !tbaa !38
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char>::__long", ptr %7, i64 0, i32 2
  %40 = or i64 %37, -9223372036854775808
  store i64 %40, ptr %39, align 8
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char>::__long", ptr %7, i64 0, i32 1
  store i64 %18, ptr %41, align 8, !tbaa !38
  br label %45

42:                                               ; preds = %33
  %43 = trunc i64 %18 to i8
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char>::__short", ptr %7, i64 0, i32 2
  store i8 %43, ptr %44, align 1
  br label %45

45:                                               ; preds = %35, %42
  %46 = phi ptr [ %38, %35 ], [ %7, %42 ]
  call void @llvm.memset.p0.i64(ptr nonnull align 1 %46, i8 %5, i64 %18, i1 false), !tbaa !38
  %47 = getelementptr inbounds i8, ptr %46, i64 %18
  store i8 0, ptr %47, align 1, !tbaa !38
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char>::__short", ptr %7, i64 0, i32 2
  %49 = load i8, ptr %48, align 1
  %50 = icmp slt i8 %49, 0
  %51 = load ptr, ptr %7, align 8
  %52 = select i1 %50, ptr %51, ptr %7
  %53 = load ptr, ptr %8, align 8, !tbaa !17
  %54 = getelementptr inbounds ptr, ptr %53, i64 12
  %55 = load ptr, ptr %54, align 8
  %56 = invoke noundef i64 %55(ptr noundef nonnull align 8 dereferenceable(64) %8, ptr noundef %52, i64 noundef %18)
          to label %57 unwind label %64

57:                                               ; preds = %45
  %58 = icmp eq i64 %56, %18
  %59 = load i8, ptr %48, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %57
  %62 = load ptr, ptr %7, align 8, !tbaa !38
  call void @_ZdlPv(ptr noundef %62) #22
  br label %63

63:                                               ; preds = %57, %61
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #18
  br i1 %58, label %71, label %81

64:                                               ; preds = %45
  %65 = landingpad { ptr, i32 }
          cleanup
  %66 = load i8, ptr %48, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %64
  %69 = load ptr, ptr %7, align 8, !tbaa !38
  call void @_ZdlPv(ptr noundef %69) #22
  br label %70

70:                                               ; preds = %64, %68
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #18
  resume { ptr, i32 } %65

71:                                               ; preds = %63, %28
  %72 = sub i64 %11, %19
  %73 = icmp sgt i64 %72, 0
  br i1 %73, label %74, label %80

74:                                               ; preds = %71
  %75 = load ptr, ptr %8, align 8, !tbaa !17
  %76 = getelementptr inbounds ptr, ptr %75, i64 12
  %77 = load ptr, ptr %76, align 8
  %78 = call noundef i64 %77(ptr noundef nonnull align 8 dereferenceable(64) %8, ptr noundef %2, i64 noundef %72)
  %79 = icmp eq i64 %78, %72
  br i1 %79, label %80, label %81

80:                                               ; preds = %74, %71
  store i64 0, ptr %14, align 8, !tbaa !37
  br label %81

81:                                               ; preds = %80, %63, %22, %74, %6
  %82 = phi i64 [ 0, %6 ], [ %0, %80 ], [ 0, %63 ], [ 0, %22 ], [ 0, %74 ]
  ret i64 %82
}

; Function Attrs: nounwind
declare noundef ptr @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(ptr noundef nonnull returned align 8 dereferenceable(16)) unnamed_addr #12

declare ptr @__cxa_begin_catch(ptr) local_unnamed_addr

declare void @_ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv(ptr noundef nonnull align 8 dereferenceable(136)) local_unnamed_addr #6

declare void @__cxa_end_catch() local_unnamed_addr

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(ptr %0) local_unnamed_addr #13 {
  %2 = tail call ptr @__cxa_begin_catch(ptr %0) #18
  tail call void @_ZSt9terminatev() #20
  unreachable
}

declare void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: mustprogress noreturn ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE20__throw_length_errorB6v15003Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) local_unnamed_addr #14 align 2 {
  tail call void @_ZNSt3__120__throw_length_errorB6v15003EPKc(ptr noundef nonnull @.str.2) #21
  unreachable
}

; Function Attrs: inlinehint mustprogress noreturn ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__throw_length_errorB6v15003EPKc(ptr noundef %0) local_unnamed_addr #15 personality ptr @__gxx_personality_v0 {
  %2 = tail call ptr @__cxa_allocate_exception(i64 16) #18
  %3 = invoke noundef ptr @_ZNSt12length_errorC1B6v15003EPKc(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef %0)
          to label %4 unwind label %5

4:                                                ; preds = %1
  tail call void @__cxa_throw(ptr nonnull %2, ptr nonnull @_ZTISt12length_error, ptr nonnull @_ZNSt12length_errorD1Ev) #21
  unreachable

5:                                                ; preds = %1
  %6 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_free_exception(ptr %2) #18
  resume { ptr, i32 } %6
}

declare ptr @__cxa_allocate_exception(i64) local_unnamed_addr

; Function Attrs: ssp uwtable
define linkonce_odr hidden noundef ptr @_ZNSt12length_errorC1B6v15003EPKc(ptr noundef nonnull returned align 8 dereferenceable(16) %0, ptr noundef %1) unnamed_addr #11 align 2 {
  %3 = tail call noundef ptr @_ZNSt11logic_errorC2EPKc(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef %1)
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVSt12length_error, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !17
  ret ptr %0
}

declare void @__cxa_free_exception(ptr) local_unnamed_addr

; Function Attrs: nounwind
declare noundef ptr @_ZNSt12length_errorD1Ev(ptr noundef nonnull returned align 8 dereferenceable(16)) unnamed_addr #12

declare void @__cxa_throw(ptr, ptr, ptr) local_unnamed_addr

declare noundef ptr @_ZNSt11logic_errorC2EPKc(ptr noundef nonnull returned align 8 dereferenceable(16), ptr noundef) unnamed_addr #6

; Function Attrs: nobuiltin allocsize(0)
declare noundef nonnull ptr @_Znwm(i64 noundef) local_unnamed_addr #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(ptr noundef) local_unnamed_addr #16

declare void @_ZNKSt3__18ios_base6getlocEv(ptr sret(%"class.std::__1::locale") align 8, ptr noundef nonnull align 8 dereferenceable(136)) local_unnamed_addr #6

; Function Attrs: nounwind
declare noundef ptr @_ZNSt3__16localeD1Ev(ptr noundef nonnull returned align 8 dereferenceable(8)) unnamed_addr #12

declare noundef ptr @_ZNKSt3__16locale9use_facetERNS0_2idE(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef nonnull align 8 dereferenceable(12)) local_unnamed_addr #6

declare void @_ZNSt3__18ios_base5clearEj(ptr noundef nonnull align 8 dereferenceable(136), i32 noundef) local_unnamed_addr #6

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(ptr noundef nonnull align 8 dereferenceable(8), i8 noundef signext) local_unnamed_addr #6

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(ptr noundef nonnull align 8 dereferenceable(8)) local_unnamed_addr #6

; Function Attrs: argmemonly nocallback nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #17

attributes #0 = { argmemonly mustprogress nofree nosync nounwind ssp uwtable "frame-pointer"="non-leaf" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+sm4,+v8.5a,+zcm,+zcz" }
attributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }
attributes #2 = { mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { mustprogress nofree norecurse nosync nounwind readnone ssp willreturn uwtable "frame-pointer"="non-leaf" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+sm4,+v8.5a,+zcm,+zcz" }
attributes #4 = { argmemonly mustprogress nofree norecurse nosync nounwind ssp uwtable "frame-pointer"="non-leaf" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+sm4,+v8.5a,+zcm,+zcz" }
attributes #5 = { mustprogress ssp uwtable "frame-pointer"="non-leaf" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+sm4,+v8.5a,+zcm,+zcz" }
attributes #6 = { "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+sm4,+v8.5a,+zcm,+zcz" }
attributes #7 = { mustprogress norecurse ssp uwtable "frame-pointer"="non-leaf" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+sm4,+v8.5a,+zcm,+zcz" }
attributes #8 = { nofree nounwind "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+sm4,+v8.5a,+zcm,+zcz" }
attributes #9 = { mustprogress nofree nounwind readonly willreturn "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+sm4,+v8.5a,+zcm,+zcz" }
attributes #10 = { nobuiltin allocsize(0) "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+sm4,+v8.5a,+zcm,+zcz" }
attributes #11 = { ssp uwtable "frame-pointer"="non-leaf" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+sm4,+v8.5a,+zcm,+zcz" }
attributes #12 = { nounwind "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+sm4,+v8.5a,+zcm,+zcz" }
attributes #13 = { noinline noreturn nounwind }
attributes #14 = { mustprogress noreturn ssp uwtable "frame-pointer"="non-leaf" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+sm4,+v8.5a,+zcm,+zcz" }
attributes #15 = { inlinehint mustprogress noreturn ssp uwtable "frame-pointer"="non-leaf" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+sm4,+v8.5a,+zcm,+zcz" }
attributes #16 = { nobuiltin nounwind "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+sm4,+v8.5a,+zcm,+zcz" }
attributes #17 = { argmemonly nocallback nofree nounwind willreturn writeonly }
attributes #18 = { nounwind }
attributes #19 = { builtin allocsize(0) }
attributes #20 = { noreturn nounwind }
attributes #21 = { noreturn }
attributes #22 = { builtin nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 2}
!3 = !{i32 7, !"frame-pointer", i32 1}
!4 = !{!"Homebrew clang version 15.0.3"}
!5 = !{!6, !6, i64 0}
!6 = !{!"double", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = distinct !{!9, !10, !11}
!10 = !{!"llvm.loop.mustprogress"}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !10, !11}
!13 = distinct !{!13, !10, !11}
!14 = distinct !{!14, !10, !11}
!15 = !{!16, !16, i64 0}
!16 = !{!"int", !7, i64 0}
!17 = !{!18, !18, i64 0}
!18 = !{!"vtable pointer", !8, i64 0}
!19 = distinct !{!19, !10, !11}
!20 = !{!21, !21, i64 0}
!21 = !{!"any pointer", !7, i64 0}
!22 = distinct !{!22, !10, !11}
!23 = distinct !{!23, !10, !11}
!24 = distinct !{!24, !10, !11}
!25 = distinct !{!25, !10, !11}
!26 = !{!27, !28, i64 0}
!27 = !{!"_ZTSNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryE", !28, i64 0, !21, i64 8}
!28 = !{!"bool", !7, i64 0}
!29 = !{i8 0, i8 2}
!30 = !{!31, !21, i64 40}
!31 = !{!"_ZTSNSt3__18ios_baseE", !16, i64 8, !32, i64 16, !32, i64 24, !16, i64 32, !16, i64 36, !21, i64 40, !21, i64 48, !21, i64 56, !21, i64 64, !32, i64 72, !32, i64 80, !21, i64 88, !32, i64 96, !32, i64 104, !21, i64 112, !32, i64 120, !32, i64 128}
!32 = !{!"long", !7, i64 0}
!33 = !{!31, !16, i64 8}
!34 = !{!35, !16, i64 144}
!35 = !{!"_ZTSNSt3__19basic_iosIcNS_11char_traitsIcEEEE", !31, i64 0, !21, i64 136, !16, i64 144}
!36 = !{!31, !16, i64 32}
!37 = !{!31, !32, i64 24}
!38 = !{!7, !7, i64 0}
